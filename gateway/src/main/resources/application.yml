server:
  port: 8000
spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: userservice
          uri: http://user-service.spring-boot-app.svc.cluster.local:8080
          predicates:
            - Path=/userservice/**
          filters:
            - RewritePath=/userservice/(?<segment>.*), /${segment}
        - id: calendar-service
          uri: http://calendar-service.spring-boot-app.svc.cluster.local:8084
          predicates:
            - Path=/calendarservice/**
          filters:
            - RewritePath=/calendarservice/(?<segment>.*), /${segment}
        - id: team-service
          uri: http://team-service.spring-boot-app.svc.cluster.local:8081
          predicates:
            - Path=/teamservice/**
          filters:
            - RewritePath=/teamservice/(?<segment>.*), /$\{segment}
      # Global CORS 설정
      globalcors:
        corsConfigurations:
          '[/**]': # 모든 경로에 대해 CORS 설정 적용
            allowedOrigins:
              - "http://172.16.211.23"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true  # 인증 정보 포함
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
logging:
  pattern:
    console: >-
      {
        "timestamp":"%d{yyyy-MM-dd'T'HH:mm:ss.SSS}",
        "level":"%p",
        "thread":"%t",
        "logger":"%c",
        "message":"%m",
        "service.name":"user-service"
      }%n
  level:
    org.springframework: info
    com.example.gateway:
      config.LoggingFilterConfig: info



secret-key: "ThisStatementIsJwtSecretKeyDoNotUseThisStatement"