server:
  port: 8000
spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: aiservice
          uri: lb://AI-SERVICE
          predicates:
            - Path=/aiservice/**
          filters:
            - RewritePath=/aiservice/(?<segment>.*), /$\{segment}
            - name: JwtAuthenticationFilter #필터 적용

        - id: userservice
#          uri: http://user-service.spring-boot-app.svc.cluster.local:8080
          ##테스트용
          uri: lb://USER-SERVICE
          predicates:
            - Path=/userservice/**
          filters:
            - RewritePath=/userservice/(?<segment>.*), /$\{segment}

        - id: teamservice
          uri: http://team-service.spring-boot-app.svc.cluster.local:8081
          predicates:
            - Path=/teamservice/**
          filters:
            - RewritePath=/teamservice/(?<segment>.*), /$\{segment}

        - id: calendarservice
          uri: lb://CALENDAR-SERVICE
          predicates:
            - Path=/calendarservice/**
          filters:
            - RewritePath=/calendarservice/(?<segment>.*), /$\{segment}



      # Global CORS 설정
      globalcors:
        corsConfigurations:
          '[/**]':  # 모든 경로에 대해 CORS 설정 적용
            allowedOrigins:
              - "http://sqace.site"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true  # 인증 정보 포함
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
logging:
  level:
    org.springframework: DEBUG
    com.example.gateway:
      config.LoggingFilterConfig: DEBUG

secret-key: "ThisStatementIsJwtSecretKeyDoNotUseThisStatement"
